import { useEffect, useState } from "react";
import * as chaptersApi from '../../api/chaptersApi'

export default function ChapterPage() {
    const [chapters, setChapters] = useState([]);
    const [editingChapter, setEditingChapter] = useState(null);
    const [formData, setFormData] = useState({
        title: '',
        order: null,
        courseId: ''
    });

    const token = localStorage.getItem('accessToken');

    useEffect(() => {
        loadChapters();
    }, []);

    async function loadChapters() {
        try {
            const data = await chaptersApi.getAllChapters(token);
            setChapters(data);
        } catch (err) {
            console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä–∫—É–∑–∫–∏ –≥–ª–∞–≤—ã:', err.message);
        }
    }

    async function handleSubmit(e) {
        e.preventDefault(); //–ù–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—É
        try {
            if (editingChapter) {
                await chaptersApi.editChapter({...formData, id: editingChapter.id}, token);
            } else {
                await chaptersApi.addChapter(formData, token);
            }

            await loadChapters();
            setFormData({title:'', order: null, courseId:''});
            setEditingChapter(null);
        } catch (err) {
            console.log('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –≥–ª–∞–≤—ã:', err.message);
        }
    }

    async function handleEdit(chapter) {
        setEditingChapter(chapter);
        setFormData({
            title: chapter.title,
            order: chapter.order,
            courseId: chapter.courseId
        });
    }

    async function hanldeDelete(id) {
        if (!window.confirm('–£–¥–∞–ª–∏—Ç—å —ç—Ç—É –≥–ª–∞–≤—É?')) return;
        try {
            await chaptersApi.deleteChapter(id, token);
            await loadChapters();
        } catch (err) {
            console.error('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –≥–ª–∞–≤—ã:', err.message);
        }
    }

    return (
        <div>
            <h1>üìò –ì–ª–∞–≤—ã</h1>

            <form onSubmit={handleSubmit}>
                <h2>{editingChapter ? '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –≥–ª–∞–≤—É' : '–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é –≥–ª–∞–≤—É'}</h2>

                <input
                    type="text"
                    placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ –≥–ª–∞–≤—ã"
                    value={formData.title}
                    onChange={(e) => setFormData({...formData, title: e.target.value})}
                    required
                /> <br />

                <input 
                    type="number"
                    placeholder="–ù–æ–º–µ—Ä –≥–ª–∞–≤—ã"
                    value={formData.order}
                    onChange={(e) => setFormData({...formData, order: e.target.value})}
                    required
                /> <br />

                <input
                    type="text"
                    placeholder="Id –∫—É—Ä—Å–∞"
                    value={formData.courseId}
                    onChange={(e) => setFormData({...formData, courseId: e.target.value})}
                    required
                /> <br />

                <button type="submit">
                    {editingChapter ? '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è' : '–î–æ–±–∞–≤–∏—Ç—å'}
                </button>
                {editingChapter && (
                    <button type="button" onClick={() => {
                        setEditingChapter(null);
                        setFormData({title: '', order: null, courseId: ''});
                    }}>
                        –û—Ç–º–µ–Ω–∞
                </button>
                )}
            </form>

            <hr />
            <h2>–°–ø–∏—Å–æ–∫ –≥–ª–∞–≤ ({chapters.length})</h2>
            {chapters.length === 0 ? (
                <p>–ù–µ—Ç –≥–ª–∞–≤</p>
            ) : (
                <ul>
                    {chapters.map((chapter) => (
                        <li key={chapter.id}>
                            <string>{chapter.title}</string>
                            <button onClick={() => handleEdit(chapter)}>‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å</button>
                            <button onClick={() => hanldeDelete(chapter.id)}>üóëÔ∏è –£–¥–∞–ª–∏—Ç—å</button>
                        </li>
                    ))}
                </ul>
            )}
        </div>
    )
}